#if 0
struct iphdr {
#if defined(__LITTLE_ENDIAN_BITFIELD)
	__u8     ihl : 4,
		version : 4;
#elif defined (__BIG_ENDIAN_BITFIELD)
	__u8 version : 4,
		ihl : 4;
#endif
	__u8    tos;
	__be16  tot_len;
	__be16  id;
	__be16  frag_off;
	__u8    ttl;
	__u8    protocol;
	__sum16 check;
	__be32  saddr;
	__be32  daddr;
	/*The options start here. */
};

struct udphdr {
	__be16 source;
	__be16 dest;
	__be16 len;
	__sum16 check;
};

struct icmphdr {
	__u8      type;
	__u8      code;
	__sum16   checksum;
	union {
		struct {
			__be16  id;
			__be16  sequence;
		} echo;
		__be32  gateway;
		struct {
			__be16  __unused;
			__be16  mtu;
		} frag;
		__u8    reserved[4];
	} un;
};

struct dhcphdr {
	uint8_t op;
	uint8_t htype;
	uint8_t hlen;
	uint8_t hops;
	uint32_t xid;
	uint16_t secs;
	uint16_t flags;
	uint32_t ciaddr;
	uint32_t yiaddr;
	uint32_t siaddr;
	uint32_t giaddr;
	char chaddr[16];
	char sname[64];
	char file[128];
	char options[312];
};

#endif